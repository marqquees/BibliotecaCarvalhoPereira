@page "/"
@rendermode InteractiveServer

@using BibliotecaCarvalhoPereira.Components.Pages.Share
@using BibliotecaCarvalhoPereira.Models
@using BibliotecaCarvalhoPereira.Services

@inject LivroService LivroService

<PageTitle>Adicionar Livro</PageTitle>

<div class="container-fluid py-4">
    <div class="row justify-content-center">
        <div class="col-lg-11 col-xl-12">
            <!-- Cabeçalho da página -->
            @* <div class="mb-4">
                <h1 class="h3 mb-2">Adicionar Livro</h1>
                <p class="text-muted">Preencha as informações do livro para adicioná-lo à biblioteca.</p>
            </div> *@

            <EditForm Model="_livro" OnValidSubmit="Salvar" FormName="adicionarLivroForm" class="needs-validation">
                <DataAnnotationsValidator />

                <Formulario Livro="_livro" />

                <!-- Botões de Ação -->
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex gap-2 justify-content-end">
                            <button type="button" class="btn btn-outline-secondary" @onclick="Limpar">
                                <i class="bi bi-x-circle"></i> Limpar
                            </button>

                            <button type="submit" class="btn btn-primary" disabled="@_salvar">
                                @if (_salvar)
                                {
                                    <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                    <span>Salvando...</span>
                                }
                                else
                                {
                                    <i class="bi bi-check-circle"></i><span>Salvar</span>
                                }
                            </button>
                        </div>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</div>

<Alerta Mensagem="@_mensagem" Sucesso="@_sucesso" />

@code {
    private Livro _livro = new();
    private string? _mensagem;
    private bool _salvar;
    private bool _sucesso;

    private async Task Salvar()
    {
        try
        {
            _salvar = true;

            await LivroService.AdicionarAsync(_livro);

            _mensagem = $"Livro {_livro.Titulo} adicionado com sucesso!";
            _sucesso = true;
            
            Limpar();
        }
        catch (Exception erro)
        {
            _mensagem = $"Erro ao adicionar o livro: {erro.Message}";
            _sucesso = false;
        }
        finally
        {
            _salvar = false;
            StateHasChanged();
            await Task.Delay(3000);
            _mensagem = string.Empty;
        }    
    }

    private void Limpar()
    {
        _livro = new Livro();
        StateHasChanged();
    }
}

